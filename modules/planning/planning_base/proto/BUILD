## Auto generated by `proto_build_generator.py`
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_proto_library")
load("//tools/install:install.bzl", "install", "install_files")
load("//tools/platform:build_defs.bzl", "if_gpu")
load("//tools:python_rules.bzl", "py_proto_library")

package(default_visibility = ["//visibility:public"])

install_files(
    name = "py_pb_planning",
    dest = if_gpu(
        "planning-gpu/python/modules/planning/planning_base/proto", 
        "planning/python/modules/planning/planning_base/proto", 
    ),
    files = [
        ":st_drivable_boundary_py_pb2",
        ":planning_semantic_map_config_py_pb2",
        ":traffic_rule_config_py_pb2",
        ":planning_status_py_pb2",
        ":lattice_structure_py_pb2",
        ":learning_data_py_pb2",
        ":auto_tuning_model_input_py_pb2",
        ":auto_tuning_raw_feature_py_pb2",
        ":reference_line_smoother_config_py_pb2",
        ":ipopt_return_status_py_pb2",
        "//modules/planning/planning_base/proto/math:fem_pos_deviation_smoother_config_py_pb2",
        ":planner_open_space_config_py_pb2",
        ":planning_config_py_pb2",
        ":plugin_declare_info_py_pb2",
        ":navi_task_config_py_pb2",
        ":piecewise_jerk_path_config_py_pb2",
    ]
)

install_files(
    name = "pb_hdrs_planning",
    dest = if_gpu(
        "planning-gpu/include/proto", 
        "planning/include/proto", 
    ),
    files = [
        ":st_drivable_boundary_cc_proto",
        ":planning_semantic_map_config_cc_proto",
	":planning_config_cc_proto",
        ":traffic_rule_config_cc_proto",
        ":planning_status_cc_proto",
        ":lattice_structure_cc_proto",
        ":learning_data_cc_proto",
        ":auto_tuning_model_input_cc_proto",
        ":auto_tuning_raw_feature_cc_proto",
        ":reference_line_smoother_config_cc_proto",
        ":ipopt_return_status_cc_proto",
        "//modules/planning/planning_base/proto/math:fem_pos_deviation_smoother_config_cc_proto",
        "//modules/planning/planning_base/proto/math:cos_theta_smoother_config_cc_proto",
        "//modules/planning/planning_base/proto/math:qp_problem_cc_proto",
        ":planner_open_space_config_cc_proto",
        ":plugin_declare_info_cc_proto",
        ":navi_task_config_cc_proto",
        ":piecewise_jerk_path_config_cc_proto",
    ]
)

cc_proto_library(
    name = "st_drivable_boundary_cc_proto",
    deps = [
        ":st_drivable_boundary_proto",
    ],
)

proto_library(
    name = "st_drivable_boundary_proto",
    srcs = ["st_drivable_boundary.proto"],
)

py_proto_library(
    name = "st_drivable_boundary_py_pb2",
    deps = [
        ":st_drivable_boundary_proto",
    ],
)

cc_proto_library(
    name = "planning_semantic_map_config_cc_proto",
    deps = [
        ":planning_semantic_map_config_proto",
    ],
)

proto_library(
    name = "planning_semantic_map_config_proto",
    srcs = ["planning_semantic_map_config.proto"],
)

py_proto_library(
    name = "planning_semantic_map_config_py_pb2",
    deps = [
        ":planning_semantic_map_config_proto",
    ],
)
cc_proto_library(
    name = "traffic_rule_config_cc_proto",
    deps = [
        ":traffic_rule_config_proto",
    ],
)

proto_library(
    name = "traffic_rule_config_proto",
    srcs = ["traffic_rule_config.proto"],
)

py_proto_library(
    name = "traffic_rule_config_py_pb2",
    deps = [
        ":traffic_rule_config_proto",
    ],
)

cc_proto_library(
    name = "planning_status_cc_proto",
    deps = [
        ":planning_status_proto",
    ],
)

proto_library(
    name = "planning_status_proto",
    srcs = ["planning_status.proto"],
    deps = [
        "//modules/common_msgs/basic_msgs:geometry_proto",
        ":planning_config_proto",
        "//modules/common_msgs/routing_msgs:routing_proto",
        "//modules/common_msgs/external_command_msgs:lane_follow_command_proto"
    ],
)

py_proto_library(
    name = "planning_status_py_pb2",
    deps = [
        ":planning_status_proto",
        "//modules/common_msgs/basic_msgs:geometry_py_pb2",
        ":planning_config_py_pb2",
        "//modules/common_msgs/routing_msgs:routing_py_pb2",
    ],
)

cc_proto_library(
    name = "lattice_structure_cc_proto",
    deps = [
        ":lattice_structure_proto",
    ],
)

proto_library(
    name = "lattice_structure_proto",
    srcs = ["lattice_structure.proto"],
)

py_proto_library(
    name = "lattice_structure_py_pb2",
    deps = [
        ":lattice_structure_proto",
    ],
)
cc_proto_library(
    name = "learning_data_cc_proto",
    deps = [
        ":learning_data_proto",
    ],
)

proto_library(
    name = "learning_data_proto",
    srcs = ["learning_data.proto"],
    deps = [
        "//modules/common_msgs/chassis_msgs:chassis_proto",
        "//modules/common_msgs/basic_msgs:geometry_proto",
        "//modules/common_msgs/basic_msgs:header_proto",
        "//modules/common_msgs/basic_msgs:pnc_point_proto",
        "//modules/common_msgs/map_msgs:map_lane_proto",
        "//modules/common_msgs/perception_msgs:perception_obstacle_proto",
        "//modules/common_msgs/prediction_msgs:feature_proto",
        "//modules/common_msgs/prediction_msgs:prediction_obstacle_proto",
        "//modules/common_msgs/perception_msgs:traffic_light_detection_proto",
        "//modules/common_msgs/routing_msgs:routing_proto",
    ],
)

py_proto_library(
    name = "learning_data_py_pb2",
    deps = [
        ":learning_data_proto",
        "//modules/common_msgs/chassis_msgs:chassis_py_pb2",
        "//modules/common_msgs/basic_msgs:geometry_py_pb2",
        "//modules/common_msgs/basic_msgs:header_py_pb2",
        "//modules/common_msgs/basic_msgs:pnc_point_py_pb2",
        "//modules/common_msgs/map_msgs:map_lane_py_pb2",
        "//modules/common_msgs/perception_msgs:perception_obstacle_py_pb2",
        "//modules/common_msgs/prediction_msgs:feature_py_pb2",
        "//modules/common_msgs/prediction_msgs:prediction_obstacle_py_pb2",
        "//modules/common_msgs/perception_msgs:traffic_light_detection_py_pb2",
        "//modules/common_msgs/routing_msgs:routing_py_pb2",
    ],
)

cc_proto_library(
    name = "auto_tuning_model_input_cc_proto",
    deps = [
        ":auto_tuning_model_input_proto",
    ],
)

proto_library(
    name = "auto_tuning_model_input_proto",
    srcs = ["auto_tuning_model_input.proto"],
)

py_proto_library(
    name = "auto_tuning_model_input_py_pb2",
    deps = [
        ":auto_tuning_model_input_proto",
    ],
)
cc_proto_library(
    name = "auto_tuning_raw_feature_cc_proto",
    deps = [
        ":auto_tuning_raw_feature_proto",
    ],
)

proto_library(
    name = "auto_tuning_raw_feature_proto",
    srcs = ["auto_tuning_raw_feature.proto"],
    deps = [
        "//modules/common_msgs/basic_msgs:pnc_point_proto",
    ],
)

py_proto_library(
    name = "auto_tuning_raw_feature_py_pb2",
    deps = [
        ":auto_tuning_raw_feature_proto",
        "//modules/common_msgs/basic_msgs:pnc_point_py_pb2",
    ],
)

cc_proto_library(
    name = "reference_line_smoother_config_cc_proto",
    deps = [
        ":reference_line_smoother_config_proto",
    ],
)

proto_library(
    name = "reference_line_smoother_config_proto",
    srcs = ["reference_line_smoother_config.proto"],
    deps = [
        "//modules/planning/planning_base/proto/math:cos_theta_smoother_config_proto",
        "//modules/planning/planning_base/proto/math:fem_pos_deviation_smoother_config_proto",
    ],
)

py_proto_library(
    name = "reference_line_smoother_config_py_pb2",
    deps = [
        ":reference_line_smoother_config_proto",
        "//modules/planning/planning_base/proto/math:cos_theta_smoother_config_py_pb2",
        "//modules/planning/planning_base/proto/math:fem_pos_deviation_smoother_config_py_pb2",
    ],
)

cc_proto_library(
    name = "ipopt_return_status_cc_proto",
    deps = [
        ":ipopt_return_status_proto",
    ],
)

proto_library(
    name = "ipopt_return_status_proto",
    srcs = ["ipopt_return_status.proto"],
)

py_proto_library(
    name = "ipopt_return_status_py_pb2",
    deps = [
        ":ipopt_return_status_proto",
    ],
)

cc_proto_library(
    name = "planner_open_space_config_cc_proto",
    deps = [
        ":planner_open_space_config_proto",
    ],
)

proto_library(
    name = "planner_open_space_config_proto",
    srcs = ["planner_open_space_config.proto"],
    deps = [
        "//modules/planning/planning_base/proto/math:fem_pos_deviation_smoother_config_proto",
    ],
)

py_proto_library(
    name = "planner_open_space_config_py_pb2",
    deps = [
        ":planner_open_space_config_proto",
        "//modules/planning/planning_base/proto/math:fem_pos_deviation_smoother_config_py_pb2",
    ],
)

cc_proto_library(
    name = "planning_config_cc_proto",
    deps = [
        ":planning_config_proto",
    ],
)

proto_library(
    name = "planning_config_proto",
    srcs = ["planning_config.proto"],
    deps = [
        ":plugin_declare_info_proto",
        ":navi_task_config_proto",
    ],
)

py_proto_library(
    name = "planning_config_py_pb2",
    deps = [
        ":planning_config_proto",
    ],
)

cc_proto_library(
    name = "plugin_declare_info_cc_proto",
    deps = [
        ":plugin_declare_info_proto",
    ],
)

proto_library(
    name = "plugin_declare_info_proto",
    srcs = [":plugin_declare_info.proto"],
)

py_proto_library(
    name = "plugin_declare_info_py_pb2",
    deps = [
        ":plugin_declare_info_proto",
    ],
)

cc_proto_library(
    name = "navi_task_config_cc_proto",
    deps = [
        ":navi_task_config_proto",
    ],
)

proto_library(
    name = "navi_task_config_proto",
    srcs = ["navi_task_config.proto"],
)

py_proto_library(
    name = "navi_task_config_py_pb2",
    deps = [
        ":navi_task_config_proto",
    ],
)

cc_proto_library(
    name = "piecewise_jerk_path_config_cc_proto",
    deps = [
        ":piecewise_jerk_path_config_proto",
    ],
)

proto_library(
    name = "piecewise_jerk_path_config_proto",
    srcs = ["piecewise_jerk_path_config.proto"],
)

py_proto_library(
    name = "piecewise_jerk_path_config_py_pb2",
    deps = [
        ":piecewise_jerk_path_config_proto",
    ],
)
